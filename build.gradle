buildscript {
    repositories {
        mavenLocal()
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
        maven { url 'https://plugins.gradle.org/m2/' }
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin-multiplatform'

group 'se.kth.somabits'
version '0.0.1'

repositories {
    jcenter()
    mavenLocal()
    maven { url 'https://kotlin.bintray.com/ktor' }
    maven { url 'https://kotlin.bintray.com/kotlinx' }
}

kotlin {
    js('frontend') {
        browser {
        }
    }
    jvm('backend') {
        compilations.main {
            tasks.getByName(processResourcesTaskName) {
                dependsOn(frontendBrowserProductionWebpack)
                from(frontendBrowserProductionWebpack.outputPath)
            }
        }
    }
    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
        backendMain {
            dependencies {
                implementation kotlin('stdlib-jdk8')
                implementation "io.ktor:ktor-server-netty:$ktor_version"
                implementation "io.ktor:ktor-html-builder:$ktor_version"
                implementation "ch.qos.logback:logback-classic:$logback_version"
                implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
                implementation "io.ktor:ktor-server-netty:$ktor_version"
                implementation "ch.qos.logback:logback-classic:$logback_version"
                implementation "io.ktor:ktor-server-core:$ktor_version"
                implementation "io.ktor:ktor-websockets:$ktor_version"
                implementation "io.ktor:ktor-network:$ktor_version"
                implementation "io.ktor:ktor-serialization:$ktor_version"
                implementation "io.ktor:ktor-gson:$ktor_version"
                implementation "org.jmdns:jmdns:3.5.5"
                implementation "com.illposed.osc:javaosc-core:0.7"
                implementation "io.ktor:ktor-html-builder:$ktor_version"
            }
        }
        backendTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
            }
        }
        frontendMain {
            dependencies {
                implementation kotlin('stdlib-js')
                implementation "io.ktor:ktor-client-core:$ktor_version"
                implementation "io.ktor:ktor-client-core:$ktor_version"
                implementation "io.ktor:ktor-client-cio:$ktor_version"
                implementation "io.ktor:ktor-client-websockets:$ktor_version"
            }
        }
        frotendeTest {
            dependencies {
                implementation kotlin('test-js')
            }
        }
        all {
            languageSettings.enableLanguageFeature("InlineClasses")
        }
    }
}

//compileKotlin {
//    kotlinOptions {
//        freeCompilerArgs = ["-Xinline-classes"]
//    }
//}

//backendJar {
//    dependsOn(frontendBrowserProductionWebpack)
//    def file = new File(frontendBrowserProductionWebpack.entry.name, frontendBrowserProductionWebpack.outputPath)
//    println("Source: " + file)
//    from(file)
//}

task run(type: JavaExec, dependsOn: [backendJar]) {
    main = "se.kth.somabits.backend.ApplicationKt"
    classpath(configurations.backendRuntimeClasspath, backendJar)
    args = []
    jvmArgs = ["-Djava.net.preferIPv4Stack=true"]
}
